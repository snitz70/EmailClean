



















// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `EmailClean.Data.Properties.Settings.MySql`
//     Provider:               `MySql.Data.MySqlClient`
//     Connection String:      `server=192.168.20.24;user id=root;password=**zapped**;database=hmail`
//     Schema:                 ``
//     Include Views:          `False`



using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace hmail
{

	public partial class hmail_DB : Database
	{
		public hmail_DB() 
			: base("EmailClean.Data.Properties.Settings.MySql")
		{
			CommonConstruct();
		}

		public hmail_DB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			hmail_DB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static hmail_DB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new hmail_DB();
        }

		[ThreadStatic] static hmail_DB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        

		public class Record<T> where T:new()
		{
			public static hmail_DB repo { get { return hmail_DB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }

			public void Save() { repo.Save(this); }
			public int Update() { return repo.Update(this); }

			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static bool Exists(string sql, params object[] args) { return repo.Exists<T>(sql, args); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }

		}

	}
	



    

	[TableName("hmail.hm_accounts")]



	[PrimaryKey("accountid")]




	[ExplicitColumns]

    public partial class hm_account : hmail_DB.Record<hm_account>  
    {



		[Column] public int accountid { get; set; }





		[Column] public int accountdomainid { get; set; }





		[Column] public sbyte accountadminlevel { get; set; }





		[Column] public string accountaddress { get; set; }





		[Column] public string accountpassword { get; set; }





		[Column] public sbyte accountactive { get; set; }





		[Column] public sbyte accountisad { get; set; }





		[Column] public string accountaddomain { get; set; }





		[Column] public string accountadusername { get; set; }





		[Column] public int accountmaxsize { get; set; }





		[Column] public sbyte accountvacationmessageon { get; set; }





		[Column] public string accountvacationmessage { get; set; }





		[Column] public string accountvacationsubject { get; set; }





		[Column] public sbyte accountpwencryption { get; set; }





		[Column] public sbyte accountforwardenabled { get; set; }





		[Column] public string accountforwardaddress { get; set; }





		[Column] public sbyte accountforwardkeeporiginal { get; set; }





		[Column] public sbyte accountenablesignature { get; set; }





		[Column] public string accountsignatureplaintext { get; set; }





		[Column] public string accountsignaturehtml { get; set; }





		[Column] public DateTime accountlastlogontime { get; set; }





		[Column] public byte accountvacationexpires { get; set; }





		[Column] public DateTime accountvacationexpiredate { get; set; }





		[Column] public string accountpersonfirstname { get; set; }





		[Column] public string accountpersonlastname { get; set; }



	}

    

	[TableName("hmail.hm_acl")]



	[PrimaryKey("aclid")]




	[ExplicitColumns]

    public partial class hm_acl : hmail_DB.Record<hm_acl>  
    {



		[Column] public long aclid { get; set; }





		[Column] public long aclsharefolderid { get; set; }





		[Column] public sbyte aclpermissiontype { get; set; }





		[Column] public long aclpermissiongroupid { get; set; }





		[Column] public long aclpermissionaccountid { get; set; }





		[Column] public long aclvalue { get; set; }



	}

    

	[TableName("hmail.hm_aliases")]



	[PrimaryKey("aliasid")]




	[ExplicitColumns]

    public partial class hm_alias : hmail_DB.Record<hm_alias>  
    {



		[Column] public int aliasid { get; set; }





		[Column] public int aliasdomainid { get; set; }





		[Column] public string aliasname { get; set; }





		[Column] public string aliasvalue { get; set; }





		[Column] public sbyte aliasactive { get; set; }



	}

    

	[TableName("hmail.hm_blocked_attachments")]



	[PrimaryKey("baid")]




	[ExplicitColumns]

    public partial class hm_blocked_attachment : hmail_DB.Record<hm_blocked_attachment>  
    {



		[Column] public long baid { get; set; }





		[Column] public string bawildcard { get; set; }





		[Column] public string badescription { get; set; }



	}

    

	[TableName("hmail.hm_dbversion")]




	[ExplicitColumns]

    public partial class hm_dbversion : hmail_DB.Record<hm_dbversion>  
    {



		[Column] public int value { get; set; }



	}

    

	[TableName("hmail.hm_distributionlists")]



	[PrimaryKey("distributionlistid")]




	[ExplicitColumns]

    public partial class hm_distributionlist : hmail_DB.Record<hm_distributionlist>  
    {



		[Column] public int distributionlistid { get; set; }





		[Column] public int distributionlistdomainid { get; set; }





		[Column] public string distributionlistaddress { get; set; }





		[Column] public sbyte distributionlistenabled { get; set; }





		[Column] public sbyte distributionlistrequireauth { get; set; }





		[Column] public string distributionlistrequireaddress { get; set; }





		[Column] public sbyte distributionlistmode { get; set; }



	}

    

	[TableName("hmail.hm_distributionlistsrecipients")]



	[PrimaryKey("distributionlistrecipientid")]




	[ExplicitColumns]

    public partial class hm_distributionlistsrecipient : hmail_DB.Record<hm_distributionlistsrecipient>  
    {



		[Column] public int distributionlistrecipientid { get; set; }





		[Column] public int distributionlistrecipientlistid { get; set; }





		[Column] public string distributionlistrecipientaddress { get; set; }



	}

    

	[TableName("hmail.hm_dnsbl")]



	[PrimaryKey("sblid")]




	[ExplicitColumns]

    public partial class hm_dnsbl : hmail_DB.Record<hm_dnsbl>  
    {



		[Column] public int sblid { get; set; }





		[Column] public sbyte sblactive { get; set; }





		[Column] public string sbldnshost { get; set; }





		[Column] public string sblresult { get; set; }





		[Column] public string sblrejectmessage { get; set; }





		[Column] public int sblscore { get; set; }



	}

    

	[TableName("hmail.hm_domain_aliases")]



	[PrimaryKey("daid")]




	[ExplicitColumns]

    public partial class hm_domain_alias : hmail_DB.Record<hm_domain_alias>  
    {



		[Column] public int daid { get; set; }





		[Column] public int dadomainid { get; set; }





		[Column] public string daalias { get; set; }



	}

    

	[TableName("hmail.hm_domains")]



	[PrimaryKey("domainid")]




	[ExplicitColumns]

    public partial class hm_domain : hmail_DB.Record<hm_domain>  
    {



		[Column] public int domainid { get; set; }





		[Column] public string domainname { get; set; }





		[Column] public sbyte domainactive { get; set; }





		[Column] public string domainpostmaster { get; set; }





		[Column] public int domainmaxsize { get; set; }





		[Column] public string domainaddomain { get; set; }





		[Column] public int domainmaxmessagesize { get; set; }





		[Column] public sbyte domainuseplusaddressing { get; set; }





		[Column] public string domainplusaddressingchar { get; set; }





		[Column] public int domainantispamoptions { get; set; }





		[Column] public sbyte domainenablesignature { get; set; }





		[Column] public sbyte domainsignaturemethod { get; set; }





		[Column] public string domainsignatureplaintext { get; set; }





		[Column] public string domainsignaturehtml { get; set; }





		[Column] public sbyte domainaddsignaturestoreplies { get; set; }





		[Column] public sbyte domainaddsignaturestolocalemail { get; set; }





		[Column] public int domainmaxnoofaccounts { get; set; }





		[Column] public int domainmaxnoofaliases { get; set; }





		[Column] public int domainmaxnoofdistributionlists { get; set; }





		[Column] public int domainlimitationsenabled { get; set; }





		[Column] public int domainmaxaccountsize { get; set; }





		[Column] public string domaindkimselector { get; set; }





		[Column] public string domaindkimprivatekeyfile { get; set; }



	}

    

	[TableName("hmail.hm_fetchaccounts")]



	[PrimaryKey("faid")]




	[ExplicitColumns]

    public partial class hm_fetchaccount : hmail_DB.Record<hm_fetchaccount>  
    {



		[Column] public int faid { get; set; }





		[Column] public sbyte faactive { get; set; }





		[Column] public int faaccountid { get; set; }





		[Column] public string faaccountname { get; set; }





		[Column] public string faserveraddress { get; set; }





		[Column] public int faserverport { get; set; }





		[Column] public sbyte faservertype { get; set; }





		[Column] public string fausername { get; set; }





		[Column] public string fapassword { get; set; }





		[Column] public int faminutes { get; set; }





		[Column] public DateTime fanexttry { get; set; }





		[Column] public int fadaystokeep { get; set; }





		[Column] public sbyte falocked { get; set; }





		[Column] public sbyte faprocessmimerecipients { get; set; }





		[Column] public sbyte faprocessmimedate { get; set; }





		[Column] public sbyte faconnectionsecurity { get; set; }





		[Column] public sbyte fauseantispam { get; set; }





		[Column] public sbyte fauseantivirus { get; set; }





		[Column] public sbyte faenablerouterecipients { get; set; }



	}

    

	[TableName("hmail.hm_fetchaccounts_uids")]



	[PrimaryKey("uidid")]




	[ExplicitColumns]

    public partial class hm_fetchaccounts_uid : hmail_DB.Record<hm_fetchaccounts_uid>  
    {



		[Column] public int uidid { get; set; }





		[Column] public int uidfaid { get; set; }





		[Column] public string uidvalue { get; set; }





		[Column] public DateTime uidtime { get; set; }



	}

    

	[TableName("hmail.hm_greylisting_triplets")]



	[PrimaryKey("glid")]




	[ExplicitColumns]

    public partial class hm_greylisting_triplet : hmail_DB.Record<hm_greylisting_triplet>  
    {



		[Column] public long glid { get; set; }





		[Column] public DateTime glcreatetime { get; set; }





		[Column] public DateTime glblockendtime { get; set; }





		[Column] public DateTime gldeletetime { get; set; }





		[Column] public long glipaddress1 { get; set; }





		[Column] public long? glipaddress2 { get; set; }





		[Column] public string glsenderaddress { get; set; }





		[Column] public string glrecipientaddress { get; set; }





		[Column] public int glblockedcount { get; set; }





		[Column] public int glpassedcount { get; set; }



	}

    

	[TableName("hmail.hm_greylisting_whiteaddresses")]



	[PrimaryKey("whiteid")]




	[ExplicitColumns]

    public partial class hm_greylisting_whiteaddress : hmail_DB.Record<hm_greylisting_whiteaddress>  
    {



		[Column] public long whiteid { get; set; }





		[Column] public string whiteipaddress { get; set; }





		[Column] public string whiteipdescription { get; set; }



	}

    

	[TableName("hmail.hm_group_members")]



	[PrimaryKey("memberid")]




	[ExplicitColumns]

    public partial class hm_group_member : hmail_DB.Record<hm_group_member>  
    {



		[Column] public long memberid { get; set; }





		[Column] public long membergroupid { get; set; }





		[Column] public long memberaccountid { get; set; }



	}

    

	[TableName("hmail.hm_groups")]



	[PrimaryKey("groupid")]




	[ExplicitColumns]

    public partial class hm_group : hmail_DB.Record<hm_group>  
    {



		[Column] public long groupid { get; set; }





		[Column] public string groupname { get; set; }



	}

    

	[TableName("hmail.hm_imapfolders")]



	[PrimaryKey("folderid")]




	[ExplicitColumns]

    public partial class hm_imapfolder : hmail_DB.Record<hm_imapfolder>  
    {



		[Column] public int folderid { get; set; }





		[Column] public uint folderaccountid { get; set; }





		[Column] public int folderparentid { get; set; }





		[Column] public string foldername { get; set; }





		[Column] public byte folderissubscribed { get; set; }





		[Column] public DateTime foldercreationtime { get; set; }





		[Column] public long foldercurrentuid { get; set; }



	}

    

	[TableName("hmail.hm_incoming_relays")]



	[PrimaryKey("relayid")]




	[ExplicitColumns]

    public partial class hm_incoming_relay : hmail_DB.Record<hm_incoming_relay>  
    {



		[Column] public int relayid { get; set; }





		[Column] public string relayname { get; set; }





		[Column] public long relaylowerip1 { get; set; }





		[Column] public long? relaylowerip2 { get; set; }





		[Column] public long relayupperip1 { get; set; }





		[Column] public long? relayupperip2 { get; set; }



	}

    

	[TableName("hmail.hm_logon_failures")]




	[ExplicitColumns]

    public partial class hm_logon_failure : hmail_DB.Record<hm_logon_failure>  
    {



		[Column] public long ipaddress1 { get; set; }





		[Column] public long? ipaddress2 { get; set; }





		[Column] public DateTime failuretime { get; set; }



	}

    

	[TableName("hmail.hm_message_metadata")]



	[PrimaryKey("metadata_id")]




	[ExplicitColumns]

    public partial class hm_message_metadatum : hmail_DB.Record<hm_message_metadatum>  
    {



		[Column] public long metadata_id { get; set; }





		[Column] public int metadata_accountid { get; set; }





		[Column] public int metadata_folderid { get; set; }





		[Column] public long metadata_messageid { get; set; }





		[Column] public DateTime? metadata_dateutc { get; set; }





		[Column] public string metadata_from { get; set; }





		[Column] public string metadata_subject { get; set; }





		[Column] public string metadata_to { get; set; }





		[Column] public string metadata_cc { get; set; }



	}

    

	[TableName("hmail.hm_messagerecipients")]



	[PrimaryKey("recipientid")]




	[ExplicitColumns]

    public partial class hm_messagerecipient : hmail_DB.Record<hm_messagerecipient>  
    {



		[Column] public long recipientid { get; set; }





		[Column] public long recipientmessageid { get; set; }





		[Column] public string recipientaddress { get; set; }





		[Column] public int recipientlocalaccountid { get; set; }





		[Column] public string recipientoriginaladdress { get; set; }



	}

    

	[TableName("hmail.hm_messages")]



	[PrimaryKey("messageid")]




	[ExplicitColumns]

    public partial class hm_message : hmail_DB.Record<hm_message>  
    {



		[Column] public long messageid { get; set; }





		[Column] public int messageaccountid { get; set; }





		[Column] public int messagefolderid { get; set; }





		[Column] public string messagefilename { get; set; }





		[Column] public sbyte messagetype { get; set; }





		[Column] public string messagefrom { get; set; }





		[Column] public long messagesize { get; set; }





		[Column] public int messagecurnooftries { get; set; }





		[Column] public DateTime messagenexttrytime { get; set; }





		[Column] public sbyte messageflags { get; set; }





		[Column] public DateTime messagecreatetime { get; set; }





		[Column] public sbyte messagelocked { get; set; }





		[Column] public long messageuid { get; set; }



	}

    

	[TableName("hmail.hm_routeaddresses")]



	[PrimaryKey("routeaddressid")]




	[ExplicitColumns]

    public partial class hm_routeaddress : hmail_DB.Record<hm_routeaddress>  
    {



		[Column] public string routeaddressid { get; set; }





		[Column] public int routeaddressrouteid { get; set; }





		[Column] public string routeaddressaddress { get; set; }



	}

    

	[TableName("hmail.hm_routes")]



	[PrimaryKey("routeid")]




	[ExplicitColumns]

    public partial class hm_route : hmail_DB.Record<hm_route>  
    {



		[Column] public int routeid { get; set; }





		[Column] public string routedomainname { get; set; }





		[Column] public string routedescription { get; set; }





		[Column] public string routetargetsmthost { get; set; }





		[Column] public int routetargetsmtport { get; set; }





		[Column] public int routenooftries { get; set; }





		[Column] public int routeminutesbetweentry { get; set; }





		[Column] public byte routealladdresses { get; set; }





		[Column] public sbyte routeuseauthentication { get; set; }





		[Column] public string routeauthenticationusername { get; set; }





		[Column] public string routeauthenticationpassword { get; set; }





		[Column] public sbyte routetreatsecurityaslocal { get; set; }





		[Column] public sbyte routeconnectionsecurity { get; set; }





		[Column] public sbyte routetreatsenderaslocaldomain { get; set; }



	}

    

	[TableName("hmail.hm_rule_actions")]



	[PrimaryKey("actionid")]




	[ExplicitColumns]

    public partial class hm_rule_action : hmail_DB.Record<hm_rule_action>  
    {



		[Column] public int actionid { get; set; }





		[Column] public int actionruleid { get; set; }





		[Column] public sbyte actiontype { get; set; }





		[Column] public string actionimapfolder { get; set; }





		[Column] public string actionsubject { get; set; }





		[Column] public string actionfromname { get; set; }





		[Column] public string actionfromaddress { get; set; }





		[Column] public string actionto { get; set; }





		[Column] public string actionbody { get; set; }





		[Column] public string actionfilename { get; set; }





		[Column] public int actionsortorder { get; set; }





		[Column] public string actionscriptfunction { get; set; }





		[Column] public string actionheader { get; set; }





		[Column] public string actionvalue { get; set; }





		[Column] public int actionrouteid { get; set; }



	}

    

	[TableName("hmail.hm_rule_criterias")]



	[PrimaryKey("criteriaid")]




	[ExplicitColumns]

    public partial class hm_rule_criteria : hmail_DB.Record<hm_rule_criteria>  
    {



		[Column] public int criteriaid { get; set; }





		[Column] public int criteriaruleid { get; set; }





		[Column] public sbyte criteriausepredefined { get; set; }





		[Column] public sbyte criteriapredefinedfield { get; set; }





		[Column] public string criteriaheadername { get; set; }





		[Column] public sbyte criteriamatchtype { get; set; }





		[Column] public string criteriamatchvalue { get; set; }



	}

    

	[TableName("hmail.hm_rules")]



	[PrimaryKey("ruleid")]




	[ExplicitColumns]

    public partial class hm_rule : hmail_DB.Record<hm_rule>  
    {



		[Column] public int ruleid { get; set; }





		[Column] public int ruleaccountid { get; set; }





		[Column] public string rulename { get; set; }





		[Column] public sbyte ruleactive { get; set; }





		[Column] public sbyte ruleuseand { get; set; }





		[Column] public int rulesortorder { get; set; }



	}

    

	[TableName("hmail.hm_securityranges")]



	[PrimaryKey("rangeid")]




	[ExplicitColumns]

    public partial class hm_securityrange : hmail_DB.Record<hm_securityrange>  
    {



		[Column] public int rangeid { get; set; }





		[Column] public int rangepriorityid { get; set; }





		[Column] public long rangelowerip1 { get; set; }





		[Column] public long? rangelowerip2 { get; set; }





		[Column] public long rangeupperip1 { get; set; }





		[Column] public long? rangeupperip2 { get; set; }





		[Column] public int rangeoptions { get; set; }





		[Column] public string rangename { get; set; }





		[Column] public sbyte rangeexpires { get; set; }





		[Column] public DateTime rangeexpirestime { get; set; }



	}

    

	[TableName("hmail.hm_servermessages")]



	[PrimaryKey("smid")]




	[ExplicitColumns]

    public partial class hm_servermessage : hmail_DB.Record<hm_servermessage>  
    {



		[Column] public int smid { get; set; }





		[Column] public string smname { get; set; }





		[Column] public string smtext { get; set; }



	}

    

	[TableName("hmail.hm_settings")]



	[PrimaryKey("settingid")]




	[ExplicitColumns]

    public partial class hm_setting : hmail_DB.Record<hm_setting>  
    {



		[Column] public int settingid { get; set; }





		[Column] public string settingname { get; set; }





		[Column] public string settingstring { get; set; }





		[Column] public int settinginteger { get; set; }



	}

    

	[TableName("hmail.hm_sslcertificates")]



	[PrimaryKey("sslcertificateid")]




	[ExplicitColumns]

    public partial class hm_sslcertificate : hmail_DB.Record<hm_sslcertificate>  
    {



		[Column] public long sslcertificateid { get; set; }





		[Column] public string sslcertificatename { get; set; }





		[Column] public string sslcertificatefile { get; set; }





		[Column] public string sslprivatekeyfile { get; set; }



	}

    

	[TableName("hmail.hm_surblservers")]



	[PrimaryKey("surblid")]




	[ExplicitColumns]

    public partial class hm_surblserver : hmail_DB.Record<hm_surblserver>  
    {



		[Column] public int surblid { get; set; }





		[Column] public sbyte surblactive { get; set; }





		[Column] public string surblhost { get; set; }





		[Column] public string surblrejectmessage { get; set; }





		[Column] public int surblscore { get; set; }



	}

    

	[TableName("hmail.hm_tcpipports")]



	[PrimaryKey("portid")]




	[ExplicitColumns]

    public partial class hm_tcpipport : hmail_DB.Record<hm_tcpipport>  
    {



		[Column] public long portid { get; set; }





		[Column] public sbyte portprotocol { get; set; }





		[Column] public int portnumber { get; set; }





		[Column] public long portaddress1 { get; set; }





		[Column] public long? portaddress2 { get; set; }





		[Column] public sbyte portconnectionsecurity { get; set; }





		[Column] public long portsslcertificateid { get; set; }



	}

    

	[TableName("hmail.hm_whitelist")]



	[PrimaryKey("whiteid")]




	[ExplicitColumns]

    public partial class hm_whitelist : hmail_DB.Record<hm_whitelist>  
    {



		[Column] public long whiteid { get; set; }





		[Column] public long whiteloweripaddress1 { get; set; }





		[Column] public long? whiteloweripaddress2 { get; set; }





		[Column] public long whiteupperipaddress1 { get; set; }





		[Column] public long? whiteupperipaddress2 { get; set; }





		[Column] public string whiteemailaddress { get; set; }





		[Column] public string whitedescription { get; set; }



	}


}
